#ifndef CHIP_H
#define CHIP_H

#include <stdint.h>
#include <assert.h>

static uint16_t display[64*32];

static uint16_t predefined_sprites[16][64*32] =
{
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ','*', [68 ... 127] = ' ',
		'*',' ',' ','*', [132 ... 191] = ' ',
		'*',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		' ',' ','*',' ', [4 ... 63] = ' ',
		' ','*','*',' ', [68 ... 127] = ' ',
		' ',' ','*',' ', [132 ... 191] = ' ',
		' ',' ','*',' ', [196 ... 255] = ' ',
		' ','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		' ',' ',' ','*', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		'*',' ',' ',' ', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		' ',' ',' ','*', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		' ',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*',' ',' ','*', [4 ... 63] = ' ',
		'*',' ',' ','*', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		' ',' ',' ','*', [196 ... 255] = ' ',
		' ',' ',' ','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ',' ', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		' ',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ',' ', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		'*',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		' ',' ',' ','*', [68 ... 127] = ' ',
		' ',' ','*',' ', [132 ... 191] = ' ',
		' ','*',' ',' ', [196 ... 255] = ' ',
		'*',' ',' ',' ', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ','*', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		'*',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ','*', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		' ',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ','*', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		'*',' ',' ','*', [196 ... 255] = ' ',
		'*',' ',' ','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*',' ', [4 ... 63] = ' ',
		'*',' ',' ','*', [68 ... 127] = ' ',
		'*','*','*',' ', [132 ... 191] = ' ',
		'*',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*',' ', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ',' ', [68 ... 127] = ' ',
		'*',' ',' ',' ', [132 ... 191] = ' ',
		'*',' ',' ',' ', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*',' ', [4 ... 63] = ' ',
		'*',' ',' ','*', [68 ... 127] = ' ',
		'*',' ',' ','*', [132 ... 191] = ' ',
		'*',' ',' ','*', [196 ... 255] = ' ',
		'*','*','*',' ', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ',' ', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		'*',' ',' ',' ', [196 ... 255] = ' ',
		'*','*','*','*', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	},
	{
		'*','*','*','*', [4 ... 63] = ' ',
		'*',' ',' ',' ', [68 ... 127] = ' ',
		'*','*','*','*', [132 ... 191] = ' ',
		'*',' ',' ',' ', [196 ... 255] = ' ',
		'*',' ',' ',' ', [260 ... 319] = ' ',
		[320 ... 2047] = 'x'
	}
};

struct chip {
	uint8_t V[16]; // V Register
	uint8_t memory[4096]; // Memory
	
	uint16_t I; // Address Register

	uint8_t delay_timer;
	uint8_t sound_timer;

	uint16_t stack[16];
	uint16_t sp; // stack pointer
	uint16_t pc; // program counter
};

void updateDisplay(uint8_t sprite)
{
	assert(sprite < 16);
	for(int i = 0; i < 64 * 32; i++)
	{
		if (i % 64 == 0)
		{
			printf("\n");
		}
		printf("%c",predefined_sprites[sprite][i]);
	}
	printf("\n");
}

void clearDisplay()
{
	return;
}


#endif
